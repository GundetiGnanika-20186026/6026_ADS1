import java.util.Scanner;
class Bst {
    private Node root;
    private class Node {
        private int key;
        private Node left, right;
        public Node(int key1) {
            this.key = key1;

        }
    }

    public void put(int key) {
        root = put(root, key);
    }

    private Node put(Node x, int key) {
        if (x == null) return new Node(key);
        int cmp = key-x.key;
        if      (cmp < 0) x.left  = put(x.left,  key);
        else if (cmp > 0) x.right = put(x.right, key);
        return x;
    }



    public void mirror()
    {
        root = mirror(root);
    }

    Node mirror(Node node)
    {
        if (node == null)
            return node;
        Node left = mirror(node.left);
        Node right = mirror(node.right);
        node.left = right;
        node.right = left;

        return node;
    }

    public void printinorder() {
    	printinorder(root);
    }

    public void printinorder(Node x){
    	 if (x == null){
    	 	return;
    	 }
    	 printinorder(x.left);
    	 System.out.print(x.key+" ");
    	 printinorder(x.right);
    }


}






class Mirror {
	public static void main(String[] args) {
		Scanner scan = new Scanner(System.in);
		String[] line = scan.nextLine().split(",");
		Bst obj = new Bst();
		for(int i = 0;i<line.length;i++){
           obj.put(Integer.parseInt(line[i]));
		}

		obj.printinorder();
		System.out.println();
		obj.mirror();
		obj.printinorder();

	}

}